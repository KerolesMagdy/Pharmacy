package com.keroles.Pharmacy.Model.Entity;
// Generated Oct 22, 2021, 2:07:56 PM by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name="order"
    ,catalog="pharmacy"
)
public class Order  implements java.io.Serializable {


     private Integer orderId;
     private DeliveryMan deliveryMan;
     private Employee employee;
     private Users users;
     private float totalCash;
     private Date orderDatetime;
     private String deliverStatus;
     private boolean paymentStatus;
     private float orderLat;
     private float orderLong;
     private Set<OrderInfo> orderInfos = new HashSet(0);

    public Order() {
    }

	
    public Order(DeliveryMan deliveryMan, Employee employee, Users users, float totalCash, Date orderDatetime, String deliverStatus, boolean paymentStatus, float orderLat, float orderLong) {
        this.deliveryMan = deliveryMan;
        this.employee = employee;
        this.users = users;
        this.totalCash = totalCash;
        this.orderDatetime = orderDatetime;
        this.deliverStatus = deliverStatus;
        this.paymentStatus = paymentStatus;
        this.orderLat = orderLat;
        this.orderLong = orderLong;
    }
    public Order(DeliveryMan deliveryMan, Employee employee, Users users, float totalCash, Date orderDatetime, String deliverStatus, boolean paymentStatus, float orderLat, float orderLong, Set orderInfos) {
       this.deliveryMan = deliveryMan;
       this.employee = employee;
       this.users = users;
       this.totalCash = totalCash;
       this.orderDatetime = orderDatetime;
       this.deliverStatus = deliverStatus;
       this.paymentStatus = paymentStatus;
       this.orderLat = orderLat;
       this.orderLong = orderLong;
       this.orderInfos = orderInfos;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ORDER_ID", unique=true, nullable=false)
    public Integer getOrderId() {
        return this.orderId;
    }
    
    public void setOrderId(Integer orderId) {
        this.orderId = orderId;
    }

@ManyToOne(fetch=FetchType.LAZY)
@JsonBackReference(value = "order-deliveryman")
    @JoinColumn(name="DELIVERY_MAN_ID", nullable=false)
    public DeliveryMan getDeliveryMan() {
        return this.deliveryMan;
    }
    
    public void setDeliveryMan(DeliveryMan deliveryMan) {
        this.deliveryMan = deliveryMan;
    }

@ManyToOne(fetch=FetchType.LAZY)
@JsonBackReference(value = "employee-order")
    @JoinColumn(name="EMPLOYEE_ID", nullable=false)
    public Employee getEmployee() {
        return this.employee;
    }
    
    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

@ManyToOne(fetch=FetchType.LAZY)
@JsonBackReference(value = "user-order")
    @JoinColumn(name="USER_ID", nullable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }

    
    @Column(name="TOTAL_CASH", nullable=false, precision=12, scale=0)
    public float getTotalCash() {
        return this.totalCash;
    }
    
    public void setTotalCash(float totalCash) {
        this.totalCash = totalCash;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ORDER_DATETIME", nullable=false, length=19)
    public Date getOrderDatetime() {
        return this.orderDatetime;
    }
    
    public void setOrderDatetime(Date orderDatetime) {
        this.orderDatetime = orderDatetime;
    }

    
    @Column(name="DELIVER_STATUS", nullable=false, length=100)
    public String getDeliverStatus() {
        return this.deliverStatus;
    }
    
    public void setDeliverStatus(String deliverStatus) {
        this.deliverStatus = deliverStatus;
    }

    
    @Column(name="PAYMENT_STATUS", nullable=false)
    public boolean isPaymentStatus() {
        return this.paymentStatus;
    }
    
    public void setPaymentStatus(boolean paymentStatus) {
        this.paymentStatus = paymentStatus;
    }

    
    @Column(name="ORDER_LAT", nullable=false, precision=12, scale=0)
    public float getOrderLat() {
        return this.orderLat;
    }
    
    public void setOrderLat(float orderLat) {
        this.orderLat = orderLat;
    }

    
    @Column(name="ORDER_LONG", nullable=false, precision=12, scale=0)
    public float getOrderLong() {
        return this.orderLong;
    }
    
    public void setOrderLong(float orderLong) {
        this.orderLong = orderLong;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="order")
@JsonManagedReference(value = "order-orderinfo")

    public Set<OrderInfo> getOrderInfos() {
        return this.orderInfos;
    }
    
    public void setOrderInfos(Set<OrderInfo> orderInfos) {
        this.orderInfos = orderInfos;
    }


    public void Transfer(Order order){
        this.orderId=order.getOrderId()!=null?order.getOrderId():null;
        this.totalCash=order.getTotalCash();
        this.orderDatetime=order.getOrderDatetime()!=null?order.getOrderDatetime():null;
        this.deliverStatus=order.getDeliverStatus()!=null?order.getDeliverStatus():null;
        this.paymentStatus=order.isPaymentStatus()!=false?order.isPaymentStatus():false;
        this.orderLat=order.getOrderLat();
        this.orderLong=order.getOrderLong();

    }



}


