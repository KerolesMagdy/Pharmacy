package com.keroles.Pharmacy.Model.Entity;
// Generated Oct 22, 2021, 2:07:56 PM by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.springframework.lang.Nullable;
import static com.keroles.Pharmacy.Constant.ConstantDbProperties.*;

/**
 * Address generated by hbm2java
 */
@Entity
@Table(name="address"
    ,catalog="pharmacy"
)
//@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class,property = "addressId")

public class Address  implements java.io.Serializable {


     private Integer addressId;
     private String addressTitle;
     private String city;
     private String governorate;
     private Set<Company> companies = new HashSet(0);
     private Set<Employee> employees = new HashSet(0);
     private Set<Users> userses = new HashSet(0);

    public Address() {
    }

	
    public Address(String addressTitle, String city, String governorate) {
        this.addressTitle = addressTitle;
        this.city = city;
        this.governorate = governorate;
    }
    public Address(String addressTitle, String city, String governorate, Set<Company> companies, Set<Employee> employees, Set<Users> userses) {
       this.addressTitle = addressTitle;
       this.city = city;
       this.governorate = governorate;
       this.companies = companies;
       this.employees = employees;
       this.userses = userses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name=table_address_attribut_address_id, unique=true, nullable=false)
    public Integer getAddressId() {
        return this.addressId;
    }
    
    public void setAddressId(Integer addressId) {
        this.addressId = addressId;
    }

    
    @Column(name=table_address_attribut_address_title, nullable=false, length=500)
    public String getAddressTitle() {
        return this.addressTitle;
    }
    
    public void setAddressTitle(String addressTitle) {
        this.addressTitle = addressTitle;
    }

    
    @Column(name=table_address_attribut_city, nullable=false, length=100)
    public String getCity() {
        return this.city;
    }
    
    public void setCity(String city) {
        this.city = city;
    }

    
    @Column(name=table_address_attribut_governorate, nullable=false, length=100)
    public String getGovernorate() {
        return this.governorate;
    }
    
    public void setGovernorate(String governorate) {
        this.governorate = governorate;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="address")
@JsonManagedReference(value = "company-address")
@Nullable
    public Set<Company> getCompanies() {
        return this.companies;
    }
    
    public void setCompanies(Set<Company> companies) {
        this.companies = companies;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="address")
@JsonManagedReference(value = "employee-address")

    public Set<Employee> getEmployees() {
        return this.employees;
    }
    
    public void setEmployees(Set<Employee> employees) {
        this.employees = employees;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="address")
@JsonManagedReference(value = "user-address")

    public Set<Users> getUserses() {
        return this.userses;
    }
    
    public void setUserses(Set<Users> userses) {
        this.userses = userses;
    }

    @Override
    public String toString() {
        return addressTitle+"  ------ "+city+"  ------ "+governorate;
    }

    public void Transfer(Address address){
        
        this.addressTitle=address.getAddressTitle();
        this.city=address.getCity();
        this.governorate=address.getGovernorate();
    }



}


