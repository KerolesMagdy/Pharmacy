package com.keroles.Pharmacy.Model.Entity;
// Generated Oct 22, 2021, 2:07:56 PM by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static com.keroles.Pharmacy.Constant.ConstantDbProperties.*;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name=table_employee
    ,catalog=db_name
)
//@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class,property = "empId")

public class Employee  implements java.io.Serializable {


     private Integer empId;
     private Address address;
     private String empName;
     private boolean empType;
     private long empPhone;
     private String empEmail;
     private String empPassword;
     private String empImage;
     private long empNationalId;
     private Set<Order> orders = new HashSet(0);

    public Employee() {
    }

	
    public Employee(Address address, String empName,boolean empType, long empPhone, String empEmail, String empPassword, String empImage, long empNationalId) {
        this.address = address;
        this.empName = empName;
        this.empType=empType;
        this.empPhone = empPhone;
        this.empEmail = empEmail;
        this.empPassword = empPassword;
        this.empImage = empImage;
        this.empNationalId = empNationalId;
    }
    public Employee(Address address, String empName,boolean empType, long empPhone, String empEmail, String empPassword, String empImage, long empNationalId, Set<Order> orders) {
       this.address = address;
       this.empName = empName;
       this.empType = empType;
       this.empPhone = empPhone;
       this.empEmail = empEmail;
       this.empPassword = empPassword;
       this.empImage = empImage;
       this.empNationalId = empNationalId;
       this.orders = orders;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name=table_employee_attribute_emp_id, unique=true, nullable=false)
    public Integer getEmpId() {
        return this.empId;
    }
    
    public void setEmpId(Integer empId) {
        this.empId = empId;
    }

@ManyToOne(fetch=FetchType.LAZY)
@JsonBackReference(value = "employee-address")
    @JoinColumn(name=table_employee_attribute_emp_address_id, nullable=false)
    public Address getAddress() {
        return this.address;
    }
    
    public void setAddress(Address address) {
        this.address = address;
    }

    @Column(name=table_employee_attribute_emp_type, nullable=false)
    public boolean isEmpType() {
        return empType;
    }

    public void setEmpType(boolean empType) {
        this.empType = empType;
    }

    @Column(name=table_employee_attribute_emp_name, nullable=false, length=100)
    public String getEmpName() {
        return this.empName;
    }
    
    public void setEmpName(String empName) {
        this.empName = empName;
    }

    
    @Column(name=table_employee_attribute_emp_phone, nullable=false)
    public long getEmpPhone() {
        return this.empPhone;
    }
    
    public void setEmpPhone(long empPhone) {
        this.empPhone = empPhone;
    }

    
    @Column(name=table_employee_attribute_emp_email, nullable=false, length=200)
    public String getEmpEmail() {
        return this.empEmail;
    }
    
    public void setEmpEmail(String empEmail) {
        this.empEmail = empEmail;
    }

    
    @Column(name=table_employee_attribute_emp_password, nullable=false, length=200)
    public String getEmpPassword() {
        return this.empPassword;
    }
    
    public void setEmpPassword(String empPassword) {
        this.empPassword = empPassword;
    }

    
    @Column(name=table_employee_attribute_emp_image, nullable=false, length=1000)
    public String getEmpImage() {
        return this.empImage;
    }
    
    public void setEmpImage(String empImage) {
        this.empImage = empImage;
    }

    
    @Column(name=table_employee_attribute_emp_national_id, nullable=false)
    public long getEmpNationalId() {
        return this.empNationalId;
    }
    
    public void setEmpNationalId(long empNationalId) {
        this.empNationalId = empNationalId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy=table_employee)
@JsonManagedReference(value = "employee-order")

    public Set<Order> getOrders() {
        return this.orders;
    }
    
    public void setOrders(Set<Order> orders) {
        this.orders = orders;
    }

    public void Transfer(Employee employee){
        this.empName=employee.getEmpName()!=null?employee.getEmpName():null;
        this.empEmail=employee.getEmpEmail()!=null?employee.getEmpEmail():null;
        this.empImage=employee.getEmpImage()!=null?employee.getEmpImage():null;
        this.address=employee.getAddress()!=null?employee.getAddress():null;
        this.empNationalId=employee.getEmpNationalId();
        this.empPhone=employee.getEmpPhone();
    }

}


